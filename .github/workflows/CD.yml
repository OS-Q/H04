name: CD

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
      # - "[0-9]+.[0-9]+.[0-9]+*"

env:
  UPLOAD_BUILD: false
  CHECK_TEMPLET: false
  CHECK_BOARDS: false
  PLAT: "22"

jobs:
  Lint_Code:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        submodules: "recursive"

    - name: cppcheck
      uses: Qful/check-action@master
      with:
        github_token: ${{ secrets.OSQ_REPO_TOKEN }}
        enable: all
        inconclusive: disable
        inline_suppression: disable
        force_language: c
        force: enable
        max_ctu_depth: 2
        std: c11
        output_file: ./codecheck.txt
        other_options: --bug-hunting --verbose --std=c11

    - name: report
      uses: Qful/check-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
        BRANCH_NAME: 'master'

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: code_check_report
        path: codecheck.txt

  example:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        example:
          - "eval-blink"
          - "arduino-blink"
          - "longan-nano-blink"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          qio platform install file://.

      - name: build examples
        working-directory: examples
        run: |
          qio run -d ${{ matrix.example }}

      - name: upload examples
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: build_${{ matrix.example }}
          path: examples/${{ matrix.example }}/.pio/build

  build_example_tail:
    needs:
      - example
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Generate message
        id: message
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "::set-output name=info::fail_build_example_${GITHUB_REF/refs\/tags\//}"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}/${GITHUB_REF/refs\/tags\//}
          message: ${{ steps.message.outputs.info }}

      - name: delet tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}

  templete:
    needs:
      - example
    if: success()
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        template: ["A","B"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          qio platform install file://.

      - name: Checkout templete
        uses: actions/checkout@v2
        with:
          repository: OS-Q/F${{ env.PLAT }}${{ matrix.template }}
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: ${{ matrix.template }}

      - name: Build templete
        if: success()
        working-directory: ${{ matrix.template }}
        run: |
          qio run -d .

  build_templete_tail:
    needs:
      - templete
    if: startsWith(github.ref, 'refs/tags/') && failure()
    runs-on: ubuntu-latest
    steps:
      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "build templete fail"

  release:
    needs:
      - templete
    if: startsWith(github.ref, 'refs/tags/') && !failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Generate tag
        id: tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "::set-output name=release_tag::release_$(date +"%Y.%m.%d")_${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=status::success"

      - name: Package
        id: package
        run: |
          zip -r all.zip boards builder extend misc link.json link.py platform.json platform.py
          zip -r qio.zip boards extend misc link.json link.py
          zip -r pio.zip boards builder misc platform.json platform.py
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload package
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name:  ${{ steps.tag.outputs.release_tag }}_all
          path: ${{ env.FIRMWARE }}/all.zip

      - name: Upload qio
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.tag.outputs.release_tag }}_qio
          path: ${{ env.FIRMWARE }}/qio.zip

      - name: Upload pio
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.tag.outputs.release_tag }}_pio
          path: ${{ env.FIRMWARE }}/pio.zip

      - name: Release version
        id: upload-release
        uses: Qful/release-action@master
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            ${{ env.FIRMWARE }}/all.zip
            ${{ env.FIRMWARE }}/qio.zip
            ${{ env.FIRMWARE }}/pio.zip

  release_tail:
    needs:
      - release
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}/${GITHUB_REF/refs\/tags\//}
          message: "release not success"

      - name: delet tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}

  check_release:
    needs:
      - release
    if: success()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        id: getgh
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          qio platform install https://github.com/OS-Q/P${{ env.PLAT }}/releases/latest/download/all.zip
          echo "::set-output name=status::success"

      - name: Build
        id: build
        if: steps.getgh.outputs.status == 'success' && !cancelled()
        run: |
          qio run -d examples/arduino-blink

  check_release_tail:
    needs:
      - check_release
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "check release not success"

      - name: delet tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}

  deploy:
    needs:
      - templete
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Setup OSS
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: upload package
        id: OSS
        run: |
          zip -r P22.zip boards builder extend misc link.json link.py platform.json platform.py
          ossutil cp P22.zip ${{ secrets.OSS_P_BUCKET }} -f

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}/
          message: "deploy package success"

  check_deploy:
    needs:
      - deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Setup OSS
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: download package
        id: download
        run: |
          ossutil cp ${{ secrets.OSS_P_BUCKET }}P22.zip .
          ls -a P22.zip
          echo "::set-output name=status::success"

      - name: Install package
        if: steps.download.outputs.status == 'success' && !cancelled()
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          qio platform install file://./P22.zip

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "deploy package success"

  check_deploy_tail:
    needs:
      - check_deploy
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "check deploy fail"

      - name: delet tag
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}

  package:
    needs:
      - templete
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      # - name: Del folder
      #   if: env.CHECK_TEMPLET
      #   id: folder
      #   run: |
      #     rm -rf examples

      # - name: Del boards
      #   if: env.CHECK_BOARDS
      #   id: boards
      #   run: |
      #     rm -rf boards

      - name: Checkout templete A
        if: env.CHECK_TEMPLET
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1
          repository: OS-Q/F${{ env.PLAT }}A
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: examples/A

      - name: Checkout templete B
        if: env.CHECK_TEMPLET
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1
          repository: OS-Q/F${{ env.PLAT }}B
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: examples/B

      # - name: package templete
      #   if: success()
      #   run: |
      #     rm -rf boards

      # - name: Checkout boards
      #   if: env.CHECK_BOARDS
      #   uses: actions/checkout@v2
      #   with:
      #     submodules: "recursive"
      #     fetch-depth: 1
      #     repository: OS-Q/B${{ env.PLAT }}
      #     token: ${{ secrets.OSQ_REPO_TOKEN }}
      #     path: boards

      - name: Setup Folder
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: Upload Package
        id: OSS
        run: |
          ossutil cp ${{ secrets.OSS_P_Q_BUCKET }}P22.md .
          echo ${GITHUB_REF/refs\/tags\//} >> P22.md
          echo -e "Platform P22 for GD32V MCU" >> P22.txt
          echo ${GITHUB_REF/refs\/tags\//} >> P22.txt
          git log --stat -3 >> P22.txt
          zip -r P22.zip examples boards builder extend misc link.json link.py platform.json platform.py
          ossutil cp P22.zip ${{ secrets.OSS_P_Q_BUCKET }} -f
          ossutil cp P22.txt ${{ secrets.OSS_P_Q_BUCKET }} -f
          ossutil cp P22.md ${{ secrets.OSS_P_Q_BUCKET }} -f
          echo "::set-output name=status::success"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}/${GITHUB_REF/refs\/tags\//}
          message: "package success"

  check_package:
    needs:
      - package
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Setup OSS
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: download package
        id: download
        run: |
          ossutil cp ${{ secrets.OSS_P_Q_BUCKET }}P22.zip .
          ossutil cp ${{ secrets.OSS_P_Q_BUCKET }}P22.txt .
          ossutil cp ${{ secrets.OSS_P_Q_BUCKET }}P22.md .
          echo "::set-output name=status::success"

      - name: Install package
        if: steps.download.outputs.status == 'success' && !cancelled()
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          qio platform install file://./P22.zip

      - name: Build
        id: build
        if: success()
        run: |
          unzip P22.zip
          qio run -d examples/A

      - name: Send Mail
        if: success()
        uses: Qful/mail-action@master
        with:
          server_address:  smtp.gmail.com
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: OS-Q P22 released (GD32V)
          to: ${{secrets.MAIL_TO}}
          from: Qitas
          cc: ${{github.event.pusher.email}}
          content_type: text/html
          convert_markdown: true
          attachments: P22.txt
          body: file://./P22.md

  check_package_tail:
    needs:
      - check_package
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "package check fail"

      - name: delet tag
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}
